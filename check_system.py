#!/usr/bin/env python3
"""
Verifica√ß√£o R√°pida - MoCoVe
Testa se o sistema est√° funcionando sem problemas de timeout
"""

import requests
import time

def check_system():
    print("üîç Verifica√ß√£o R√°pida do Sistema MoCoVe")
    print("=" * 50)
    
    base_url = "http://localhost:5000"
    
    tests = [
        ("üé® Favicon", f"{base_url}/favicon.ico"),
        ("üåê Frontend", f"{base_url}/"),
        ("üìä API Status", f"{base_url}/api/system/status"),
        ("üìã Watchlist", f"{base_url}/api/watchlist/summary"),
    ]
    
    results = []
    
    for name, url in tests:
        try:
            print(f"Testing {name}... ", end="")
            response = requests.get(url, timeout=3)
            
            if response.status_code == 200:
                print("‚úÖ OK")
                results.append(True)
            else:
                print(f"‚ùå HTTP {response.status_code}")
                results.append(False)
                
        except requests.exceptions.Timeout:
            print("‚è∞ Timeout")
            results.append(False)
        except requests.exceptions.ConnectionError:
            print("üîå Conex√£o recusada")
            results.append(False)
        except Exception as e:
            print(f"‚ùå Erro: {e}")
            results.append(False)
    
    # Resultado final
    success_count = sum(results)
    total_tests = len(results)
    
    print("\n" + "=" * 50)
    print(f"üìä Resultado: {success_count}/{total_tests} testes passaram")
    
    if success_count == total_tests:
        print("üéâ SISTEMA 100% FUNCIONAL!")
        print("‚úÖ Favicon corrigido - sem mais erros 404!")
    elif success_count >= total_tests // 2:
        print("‚úÖ Sistema majoritariamente funcional!")
    else:
        print("‚ö†Ô∏è Sistema com problemas - verifique o backend")
    
    return success_count == total_tests

if __name__ == "__main__":
    try:
        check_system()
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è Verifica√ß√£o interrompida")
    except Exception as e:
        print(f"\n‚ùå Erro na verifica√ß√£o: {e}")
