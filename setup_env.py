#!/usr/bin/env python3
"""
Script para inicializar o ambiente e carregar configura√ß√µes
"""

import os
import sys
from pathlib import Path

def load_env_file(env_file='.env.example'):
    """Carrega vari√°veis de ambiente de um arquivo"""
    env_path = Path(__file__).parent / env_file
    
    if not env_path.exists():
        print(f"‚ùå Arquivo {env_file} n√£o encontrado")
        return False
    
    print(f"üìÑ Carregando configura√ß√µes de {env_file}")
    
    with open(env_path, 'r', encoding='utf-8') as f:
        for line in f:
            line = line.strip()
            if line and not line.startswith('#') and '=' in line:
                key, value = line.split('=', 1)
                os.environ[key] = value
                print(f"‚úÖ {key} = {value[:20]}..." if len(value) > 20 else f"‚úÖ {key} = {value}")
    
    return True

if __name__ == "__main__":
    print("üöÄ Inicializando MoCoVe Trading System...")
    
    # Carregar configura√ß√µes
    if load_env_file():
        print("\n‚úÖ Configura√ß√µes carregadas com sucesso!")
        print("\nüîß Configura√ß√£o atual:")
        print(f"   ‚Ä¢ USE_TESTNET: {os.getenv('USE_TESTNET', 'true')}")
        print(f"   ‚Ä¢ DEFAULT_SYMBOL: {os.getenv('DEFAULT_SYMBOL', 'DOGEUSDT')}")
        print(f"   ‚Ä¢ INVESTMENT_AMOUNT: {os.getenv('INVESTMENT_AMOUNT', '25.0')}")
        
        # Verificar credenciais
        api_key = os.getenv('BINANCE_API_KEY', '')
        if api_key and len(api_key) > 10:
            print(f"   ‚Ä¢ Binance API Key: {api_key[:8]}...{api_key[-4:]}")
        else:
            print("   ‚Ä¢ ‚ö†Ô∏è  Binance API Key n√£o configurada")
    else:
        print("‚ùå Falha ao carregar configura√ß√µes")
        sys.exit(1)
